version: '3'

# define all services
networks:
  laravel:

services:
  nginx:
    image: nginx:stable-alpine
    container: nginx
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    # we use the mysql base image, version 5.6.36
    image: mysql:5.6.36
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    # we mount a datavolume to make sure we don't loose data
    volumes:
       - db_data:/var/lib/mysql
    # setting some envvars to create the DB
    environment:
      - MYSQL_USER=root
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_DATABASE=db_paktikum_prognet
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    networks:
      - laravel

  php:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - laravel

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - laravel
  
  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  # our service is called laravel ;-)
  laravel:
    # we want to use the image which is build from our Dockerfile
    build: .
    # apache is running on port 80 but we want to expose this to port 4000 on our local machine
    ports:
      - "4000:80"
    # we depending on the mysql backend
    depends_on:
      - mysql
volumes:
    db_data: